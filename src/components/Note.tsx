import { useEffect, useRef, useState } from "react";

const icons = {
    blanche: ["M7.6,18.66c0-1.29,.01-2.51,.02-3.74,0-1.23,0-2.46,0-3.69v-3.84c0-1.23,0-2.46,0-3.69,0-1.22-.03-2.44,.03-3.71h1.04c.04,.3,.11,.58,.11,.87-.03,6.59-.12,13.19-.09,19.78,.02,3.73-3.71,5.61-6.54,5.03-1.65-.34-2.53-1.85-2.05-3.46,.22-.73,.6-1.35,1.14-1.87,1.55-1.47,3.34-2.21,5.51-1.79,.23,.04,.47,.06,.81,.1Zm-4.44,5.78c.95-.01,2.07-.41,2.87-.99,.61-.44,1.11-.97,1.39-1.69,.28-.71,.05-1.43-.64-1.73-.39-.17-.86-.27-1.28-.23-1.49,.14-2.73,.79-3.64,2.01-.39,.53-.68,1.14-.35,1.79,.36,.7,1.07,.8,1.65,.84Z"],
    clef: ["M10,10 L20,10 L20,20 L10,20 Z"],
    croche: ["M16.44,12.24c.06-.47,.05-.71,.13-.93,.15-.41,.37-.8,.54-1.21,.73-1.79,.57-3.56-.16-5.31-.08-.18-.17-.36-.27-.52-.67-1.08-1.43-1.28-2.46-.56-.56,.39-1.04,.9-1.57,1.34-.53,.44-1.05,.89-1.63,1.26-.85,.54-1.78,.84-2.81,.55-.13-.04-.28,.01-.52,.03-.02,.49-.05,.97-.05,1.45,0,3.4-.03,6.8,.01,10.2,.02,1.3-.25,2.43-1.16,3.38-1.03,1.06-2.25,1.76-3.72,1.94-.93,.11-1.76-.18-2.33-.98-.58-.81-.52-1.69-.08-2.52,.89-1.68,2.32-2.66,4.19-2.93,.62-.09,1.27-.01,2.02-.01,.05-.3,.15-.62,.16-.93,.02-2.37,.02-4.73,.03-7.1,0-2.61,0-5.22,.02-7.83,0-.48-.11-.98,.16-1.44,.78-.07,.89-.02,.98,.49,.05,.29,.05,.59,.11,.88,.15,.66,.58,.92,1.2,.69,.45-.17,.86-.45,1.28-.7,.64-.37,1.23-.82,1.9-1.12,1.4-.63,2.71-.37,3.83,.65,.43,.39,.83,.86,1.13,1.35,1.26,2.06,1.7,4.29,1.17,6.66-.24,1.07-.74,2.03-1.46,2.87-.09,.1-.24,.14-.62,.36Z"],
    doubleNoire: ["M 26.53125 0.472656 C 24.261719 0.9375 22.359375 1.324219 16.5 2.519531 C 14.816406 2.863281 12.929688 3.25 12.304688 3.375 C 11.679688 3.5 10.621094 3.71875 9.949219 3.855469 C 9.277344 3.992188 8.703125 4.109375 8.664062 4.117188 L 8.601562 4.128906 L 8.601562 12.953125 C 8.601562 21.570312 8.601562 21.777344 8.558594 21.761719 C 8.429688 21.722656 7.835938 21.652344 7.5 21.640625 C 6.089844 21.589844 4.585938 22.011719 3.398438 22.796875 C 2.539062 23.363281 1.820312 24.179688 1.464844 24.976562 C 1.050781 25.917969 1.042969 26.882812 1.445312 27.746094 C 1.65625 28.210938 2.128906 28.753906 2.601562 29.09375 C 3.195312 29.515625 3.996094 29.8125 4.886719 29.945312 C 5.316406 30.007812 6.222656 30.003906 6.679688 29.933594 C 7.785156 29.761719 8.757812 29.398438 9.613281 28.832031 C 10.769531 28.0625 11.527344 27.039062 11.792969 25.878906 L 11.847656 25.652344 L 11.851562 17.386719 L 11.859375 9.117188 L 11.914062 9.105469 C 11.992188 9.085938 12.34375 9.015625 14.953125 8.484375 C 16.285156 8.210938 18.179688 7.824219 19.160156 7.625 C 20.140625 7.425781 21.480469 7.152344 22.136719 7.019531 C 22.796875 6.886719 23.828125 6.675781 24.429688 6.554688 C 25.035156 6.429688 25.542969 6.328125 25.5625 6.328125 C 25.589844 6.328125 25.59375 7.128906 25.59375 12.324219 L 25.59375 18.320312 L 25.367188 18.277344 C 24.960938 18.207031 24.558594 18.179688 24.070312 18.195312 C 22.800781 18.230469 21.566406 18.605469 20.511719 19.269531 C 19.832031 19.699219 19.1875 20.320312 18.789062 20.933594 C 18.628906 21.179688 18.402344 21.644531 18.320312 21.898438 C 18.050781 22.714844 18.097656 23.566406 18.441406 24.296875 C 19.007812 25.480469 20.253906 26.269531 21.914062 26.5 C 22.3125 26.554688 23.148438 26.554688 23.554688 26.5 C 24.4375 26.378906 25.152344 26.164062 25.902344 25.789062 C 26.511719 25.484375 26.996094 25.144531 27.453125 24.703125 C 28.148438 24.039062 28.585938 23.292969 28.785156 22.449219 L 28.839844 22.230469 L 28.84375 11.113281 C 28.847656 5 28.84375 0 28.835938 0.00390625 C 28.824219 0.00390625 27.789062 0.214844 26.53125 0.472656 Z M 26.53125 0.472656 "],
    fa: ["M2.38,2.17c.27,.22,.55,.41,.78,.65,.76,.77,.73,1.92-.05,2.62-.76,.69-1.94,.59-2.62-.25C.06,4.68-.09,4.09,.05,3.41,.51,1.12,3.09-.48,5.37,.13c2.63,.7,4.04,2.99,3.56,5.8-.2,1.18-.64,2.27-1.33,3.26-1.01,1.44-2.27,2.59-3.85,3.36-.62,.31-1.13,.26-1.16-.06-.05-.52,.4-.63,.73-.8,2.68-1.34,3.61-3.75,3.97-6.49,.11-.81-.16-1.55-.6-2.24-1.09-1.69-2.51-1.97-4.31-.78Z",
        "M11.91,8.81c-.67,0-1.18-.57-1.15-1.26,.03-.65,.47-1.1,1.12-1.12,.68-.02,1.25,.5,1.25,1.16,0,.65-.57,1.22-1.22,1.21Z",
        "M11.89,1.37c.67-.02,1.25,.53,1.24,1.18,0,.64-.6,1.23-1.23,1.21-.59-.01-1.1-.52-1.14-1.13-.04-.72,.43-1.24,1.13-1.26Z"],
    ut: ["M6.1,0c.24,1.83,.09,3.5,.12,5.16,.03,1.67,0,3.34,.01,5.11,.44,0,.82,.12,1.08,0,.32-.16,.59-.5,.8-.82,.16-.24,.2-.55,.28-.84,.07-.26,.13-.53,.19-.78,.5,.07,.44,.44,.55,.69,.34,.81,.95,1.23,1.83,1.27,.95,.04,1.63-.39,2-1.24,.21-.49,.38-1.02,.45-1.55,.21-1.44,.05-2.85-.5-4.21-.29-.72-.8-1.1-1.59-1.08-.39,0-.78,.04-1.3,.07,.15,.34,.26,.59,.38,.82,.34,.65,.41,1.31,.15,2-.27,.7-.77,1.16-1.51,1.25-.77,.09-1.33-.32-1.69-.96-.47-.83-.5-1.71-.04-2.55C8.58,.02,11.62-.87,13.79,1.33c1.83,1.86,2.39,5.25,1.19,7.57-.31,.6-.75,1.18-1.26,1.61-1.09,.93-2.36,1.17-3.73,.64-.27-.11-.53-.25-.75-.36-.46,.08-.6,.41-.68,.75-.1,.44-.04,.58,.46,1.41,.25-.09,.52-.17,.77-.27,1.58-.66,3.15-.35,4.33,.87,.74,.77,1.2,1.7,1.37,2.74,.3,1.81,.05,3.54-.94,5.12-.23,.37-.52,.73-.83,1.04-2.21,2.21-5.29,1.14-6.45-1.12-.44-.86-.37-1.72,.11-2.54,.35-.6,.9-.93,1.6-.88,.69,.04,1.21,.42,1.5,1.05,.25,.55,.35,1.14,.11,1.72-.15,.36-.35,.7-.56,1.11,.72,.48,1.47,.3,2.19,.02,.2-.08,.4-.31,.5-.52,.96-1.96,1.07-3.97,.3-6.01-.33-.86-1-1.34-1.94-1.35-.93,0-1.59,.44-1.95,1.31-.09,.21-.17,.43-.24,.61-.38,.05-.37-.18-.42-.35-.15-.47-.23-.97-.45-1.4-.32-.64-.87-.9-1.64-.65-.27,1.13-.1,2.27-.13,3.38-.03,1.08,0,2.17,0,3.25-.01,1.13,.05,2.26-.05,3.35-.8,.26-.97,.2-1-.32-.02-.34-.02-.69-.02-1.04,0-6.81,0-13.61,0-20.42,0-.49,.03-.97,.05-1.54l.89-.12Z",
        "M.13,.06H3.49c.35,.54,.21,1.09,.21,1.62,.01,5.17,0,10.33,0,15.5,0,1.72,0,3.44,0,5.17,0,.38-.04,.77-.06,1.19-.63,.22-1.22,.12-1.8,.14-.54,.01-1.07,0-1.54,0-.42-.59-.28-1.15-.28-1.67-.01-5.76,0-11.51,0-17.27C.01,3.55,0,2.37,.02,1.19c0-.34,.06-.67,.11-1.13Z"],
    soupir: ["M2.79,10.45c-.54-1.39-.86-1.85-2.57-3.73-.03-.51,.34-.78,.65-1.1,.47-.5,.93-1.02,1.37-1.55,.53-.64,.62-1.32,.11-2.03-.34-.48-.69-.96-1-1.46-.07-.11,.02-.36,.1-.5,.05-.07,.3-.11,.39-.05,.36,.25,.76,.48,1.03,.81,.84,1.03,1.63,2.1,2.42,3.17,.08,.11,.08,.28,.14,.48-.17,.21-.35,.43-.53,.65-.34,.42-.7,.83-.99,1.28-.83,1.3-.77,2.6,.14,3.84,.41,.56,.84,1.09,1.24,1.66,.24,.34,.16,.49-.39,.91-.44-.2-.86-.45-1.33-.59-1.13-.34-1.6,.29-1.56,1.29,.02,.42,.24,.85,.41,1.25,.15,.36,.38,.69,.53,1.05,.04,.09-.05,.29-.14,.37-.09,.08-.31,.13-.39,.08-1-.67-1.83-1.52-2.29-2.63-.17-.43-.15-.97-.09-1.45,.11-.92,.7-1.5,1.62-1.67,.33-.06,.68-.05,1.13-.08Z"]
}
;

interface NoteProps {
    x: number;
    y: number;
    label: string;
    xtext: number;
    iconType: "blanche" | "clef" | "croche" | "doubleNoire" | "fa" | "ut" | "soupir";
    isOnStaff: boolean;
    onClick?: () => void;
    size?: number
}

/**
 * Composant "note" permettant d'afficher un bouton avec un texte et une note
 * 
 */
export const Note = ({ x, y, label, xtext, iconType, isOnStaff = false, onClick }: NoteProps) => {
    const [isActive, setIsActive] = useState(false);

    // référence vers la balise G pour permettre, par la suite, le redimensionnement la viewport de la balise "svg"
    let refG = useRef<SVGGElement>(null);
    // référence vers la balise SVG
    let refSVG = useRef<SVGSVGElement>(null);

    const handdlePointerDown = () => {
        setIsActive(true);
    }

    const handdlePointerUp = () => {
        setIsActive(false);
        onClick?.();
    }

    /**
     * Permet de déclencher le redimensionnement de la viewbox pour que le SVG s'adapte
     */
    useEffect(() => {
        // On récupère le Bouding box de la balise 'g'
        let bBox = refG.current?.getBBox();

        // mise à jour de la taille de la viewbox svg
        refSVG.current?.setAttribute('viewBox', `${bBox?.x} ${bBox?.y} ${bBox?.width} ${bBox?.height}`);

    }, []);

    // TRIGGER WARNING : (Ludo) je suis conscient que c'est pas la plus élégante des solutions
    // Attention : la balise "svg" doit être à l'extérieur pour convenir au composant "PartitionNote"
    // Dans le cas de notes seules (seulement les boutons) nous n'avons pas besoin de cette balise.
    // Merci de votre compréhension.
    if (!isOnStaff) {
        return (<svg ref={refSVG} xmlns="http://www.w3.org/2000/svg" style={{ maxWidth: "200px", maxHeight: "40px" }}>
            <g transform={`translate(${x}, ${y})`}
                ref={refG}
                // onPointerDown={handdlePointerDown}
                // onPointerUp={handdlePointerUp}
                // onPointerLeave={handdlePointerUp}
                  onClick={onClick}
                style={{ cursor: "pointer" }}>
                {icons[iconType].map((d, i) => (
                    <path key={i} d={d} fill={isActive ? "gray" : "black"} />
                ))}

                <text x={xtext} y={25}>{label}</text>
            </g>
        </svg>);
    } else {
        return (<g transform={`translate(${x}, ${y})`}
            ref={refG}
            // onPointerDown={handdlePointerDown}
            // onPointerUp={handdlePointerUp}
            // onPointerLeave={handdlePointerUp}
              onClick={onClick}
            style={{ cursor: "pointer" }}>
            {icons[iconType].map((d, i) => (
                <path key={i} d={d} fill={isActive ? "gray" : "black"} />
            ))}

            <text x={20} y={25}>{label}</text>
        </g>);
    }


};
